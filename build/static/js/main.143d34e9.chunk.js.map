{"version":3,"sources":["config.js","services/token-service.js","Login/Login.js","Register/Register.js","ExerciseList/Exercise.js","ExerciseList/ExerciseList.js","Workout/Workout.js","WorkoutList/WorkoutList.js","WorkoutExercise/WorkoutExercise.js","WorkoutExerciseList/WorkoutExerciseList.js","AddExerciseList/AddExercise.js","AddExerciseList/AddExerciseList.js","Nav/Nav.js","Landing/Landing.js","ExerciseLog/LogEntry.js","ExerciseLog/ExerciseLog.js","App/App.js","index.js"],"names":["API_ENDPOINT","TokenService","saveAuthToken","token","window","localStorage","setItem","config","TOKEN_KEY","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","Login","state","error","handleLoginSuccess","props","location","history","destination","from","push","handleLogin","e","preventDefault","setState","login","user_name","target","value","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","authToken","catch","this","onSubmit","className","htmlFor","type","id","name","to","Component","Register","handleRegisterSuccess","handleRegister","newUser","full_name","role","Exercise","handleAddExercise","newWorkoutExercise","workout_id","workoutId","exercise_id","workoutExercise","handleGoBack","console","path","ExerciseList","exercises","muscle","muscles","getData","all","exercisesRes","filterMuscle","goBack","match","params","onClick","map","filter","exercise","exercise_name","defaultProps","pathname","Workout","handleClickDelete","title","day","WorkoutList","workouts","handleAddWorkout","newWorkout","workout","required","WorkoutExercise","workoutExerciseId","getWorkoutExercises","WorkoutExerciseList","getWorkout","handleClickBack","exerciseId","handleClickAdd","AddExercise","AddExerciseList","Nav","handleLogoutClick","handleDemo","activeClassName","renderLoggedIn","renderLoggedOut","Landing","LogEntry","logEntryId","getExerciseLog","set_count","rep_count","weight_count","date_logged","moment","format","getLogEntries","ExerciseLog","exerciseLog","getExercise","handleAddEntry","newEntry","entry","min","logEntry","App","exact","component","renderMainRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.143d34e9.chunk.js","sourcesContent":["// eslint-disable-next-line\nexport default {\n  API_ENDPOINT: 'https://shrouded-cliffs-68019.herokuapp.com/api'\n  //API_ENDPOINT: 'http://localhost:8000/api'\n}\n","import config from '../config'\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`)\n  },\n}\n\nexport default TokenService","import React, { Component } from 'react'\nimport TokenService from '../services/token-service'\nimport { Link } from 'react-router-dom'\nimport config from '../config'\nimport PropTypes from 'prop-types'\n\nexport default class Login extends Component {\n  state = {\n    error: null\n  }\n  static propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n  }\n\n  handleLoginSuccess = () => {\n    const { location, history } = this.props\n    const destination = (location.state || {}).from || '/'\n    history.push(destination)\n  }\n\n  handleLogin = e => {\n    e.preventDefault()\n    this.setState({ error: null })\n    const login = {\n      user_name: e.target['username'].value,\n      password: e.target['password'].value,\n    }\n    fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(login),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(res => {\n        TokenService.saveAuthToken(res.authToken)\n        this.handleLoginSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  };\n\n  render() {\n    const { error } = this.state\n    return (\n      <>\n        <form onSubmit={this.handleLogin} className='sign-form'>\n          <h2>Sign in</h2>\n          <div>\n            {error && <p className='form-error'>{error}</p>}\n          </div>\n          <label htmlFor='username-input'>\n            Username:\n          </label>\n          <input type='text' id='username-input' name='username' />\n          <br />\n          <label htmlFor='password-input' className='password-label'>\n            Password:\n          </label>\n          <input type='password' id='password-input' name='password' />\n          <br />\n          <button\n            type='submit'\n          >\n            Log in\n          </button>\n          <Link to='/register'>\n            <button className='sign-up-button'>Sign Up</button>\n          </Link>\n        </form>\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport config from '../config'\nimport PropTypes from 'prop-types'\nimport './Register.css'\n\nexport default class Register extends Component {\n  state = {\n    error: null\n  }\n  static propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n  }\n\n  handleRegisterSuccess = () => {\n    const { location, history } = this.props\n    const destination = (location.state || {}).from || '/login'\n    history.push(destination)\n  }\n\n  handleRegister = e => {\n    e.preventDefault()\n    const newUser = {\n      full_name: e.target['full-name'].value,\n      user_name: e.target['username'].value,\n      password: e.target['password'].value,\n    }\n    fetch(`${config.API_ENDPOINT}/users`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newUser),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(res =>\n        this.handleRegisterSuccess()\n      )\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  };\n\n  render() {\n    const { error } = this.state\n    return (\n      <>\n        <form onSubmit={this.handleRegister} className='sign-form'>\n          <h2>Sign up</h2>\n          <div role='alert'>\n            {error && <p className='form-error'>{error}</p>}\n          </div>\n          <label htmlFor='full-name-input' className='full-name-label'>\n            Full Name:\n          </label>\n          <input type='text' id='full-name-input' name='full-name' />\n          <br />\n          <label htmlFor='username-input'>\n            Username:\n          </label>\n          <input type='text' id='username-input' name='username' />\n          <br /><br />\n          <label htmlFor='password-input' className='password-label'>\n            Password:\n          </label>\n          <input type='password' id='password-input' name='password' />\n          <br />\n          <button type='submit'>\n            Create account\n          </button>\n\n        </form>\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport config from '../config'\nimport TokenService from '../services/token-service'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport default class Exercise extends Component {\n  static propTypes = {\n    id: PropTypes.number,\n    name: PropTypes.string\n  }\n\n  handleAddExercise = e => {\n    e.preventDefault()\n    const newWorkoutExercise = {\n      workout_id: this.props.workoutId,\n      exercise_id: this.props.id,\n    }\n    fetch(`${config.API_ENDPOINT}/workout_exercises`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n      body: JSON.stringify(newWorkoutExercise),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(workoutExercise => {\n        this.props.handleGoBack()\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  };\n\n  render() {\n    const { id, name } = this.props\n    const path = 'workouts/exercise_log/' + id\n    return (\n      <li key={id}>\n        <Link to={path}>\n          <h3>{name}</h3>\n        </Link>\n      </li>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './ExerciseList.css'\nimport Exercise from './Exercise'\nimport config from '../config'\nexport default class ExerciseList extends Component {\n  static defaultProps = {\n    match: { params: {} },\n    location: { pathname: {} }\n  }\n  state = {\n    exercises: [],\n    muscle: 'Chest'\n  }\n\n  muscles = ['Chest', 'Back', 'Triceps', 'Biceps', 'Shoulders', 'Traps', 'Quads', 'Hamstrings', 'Calves']\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getData = () => {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/exercises`)\n    ])\n      .then(([exercisesRes]) => {\n        if (!exercisesRes.ok)\n          return exercisesRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          exercisesRes.json(),\n        ])\n      })\n      .then(([exercises]) => {\n        this.setState({ exercises })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  filterMuscle = e => {\n    const muscle = e.target.value;\n    this.setState({\n      muscle: muscle\n    })\n  }\n\n  handleGoBack = () => {\n    this.props.history.goBack()\n  };\n\n  render() {\n    const exercises = this.state.exercises;\n    const workoutId = this.props.match.params.workoutId\n    const muscle = this.state.muscle;\n    const muscles = this.muscles;\n    return (\n      <>\n        <h2 className='add-exercise-header'>Exercises</h2>\n        <button\n          onClick={this.handleGoBack}\n        >\n          Back\n          </button>\n        <section className='muscle-group'>\n          <h3 className='muscle-header'>Muscle Group</h3>\n          <ul>\n            {muscles.map(muscle => (\n              (muscle === this.state.muscle\n                ? <li key={muscle}><button className='selected' onClick={this.filterMuscle} value={muscle}>{muscle}</button></li>\n                : <li key={muscle}><button onClick={this.filterMuscle} value={muscle}>{muscle}</button></li>\n              )\n            ))}\n          </ul>\n        </section>\n        <section className='workouts'>\n          <div>\n            Showing exercises for {muscle}:\n          </div>\n          <ul>\n            {exercises\n              .filter(exercise => exercise.muscle === muscle)\n              .map(exercise => (\n                <Exercise\n                  key={exercise.id}\n                  id={exercise.id}\n                  name={exercise.exercise_name}\n                  workoutId={workoutId}\n                  handleGoBack={this.handleGoBack}\n                />\n              ))}\n          </ul>\n        </section>\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Workout.css'\nimport config from '../config'\nimport TokenService from '../services/token-service'\nimport PropTypes from 'prop-types'\n\nexport default class Workout extends Component {\n  static defaultProps = {\n    getData: () => {},\n  }\n  static propTypes = {\n    getData: PropTypes.func,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    day: PropTypes.string\n  }\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const workoutId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/workouts/${workoutId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n    })\n      .then(() => {\n        this.props.getData()\n      })\n      .catch(error => {\n        console.error({ error})\n      })\n  }\n\n  render() {\n    const { id, title, day } = this.props\n    return (\n      <>\n        <section className='workout'>\n          <Link to={`/workouts/${id}`}>\n            <h3>{title}</h3>\n          </Link>\n          <h4>{day}</h4>\n          <button\n            type='button'\n            onClick={this.handleClickDelete}\n          >\n            Delete\n          </button>\n        </section>\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './WorkoutList.css'\nimport Workout from '../Workout/Workout'\nimport config from '../config'\nimport TokenService from '../services/token-service'\n\nexport default class WorkoutList extends Component {\n  state = {\n    workouts: [],\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getData = () => {\n    return fetch(`${config.API_ENDPOINT}/workouts`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((workouts) => {\n        this.setState({ workouts })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddWorkout = e => {\n    e.preventDefault()\n    const newWorkout = {\n      title: e.target['workout-name'].value,\n      day: e.target['workout-day'].value,\n    }\n    fetch(`${config.API_ENDPOINT}/workouts`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n      body: JSON.stringify(newWorkout),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(workout => {\n        this.getData()\n        e.target['workout-name'].value = ''\n        e.target['workout-day'].value = 'Sunday'\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  };\n\n  render() {\n    const workouts = this.state.workouts;\n    return (\n      <>\n        <section className='workouts'>\n          <h2>Workout List</h2>\n          <ul>\n            {workouts.map(workout => (\n              <li\n                key={workout.id}\n              >\n                <Workout\n                  id={workout.id}\n                  title={workout.title}\n                  day={workout.day}\n                  getData={this.getData}\n                />\n              </li>\n            ))}\n          </ul>\n          <form onSubmit={this.handleAddWorkout} className='add-workout-form'>\n            <label htmlFor='workout-name-input' className='workout-name-label'>\n              Workout Name:\n            </label>\n            <input\n              className='workout-name-input'\n              type='text'\n              id='workout-name-input'\n              name='workout-name'\n              required />\n            <br />\n            <label htmlFor='workout-day-input'>\n              Day of Week:\n            </label>\n            <select id='workout-day-select' name='workout-day'>\n              <option value='Sunday'>Sunday</option>\n              <option value='Monday'>Monday</option>\n              <option value='Tuesday'>Tuesday</option>\n              <option value='Wednesday'>Wednesday</option>\n              <option value='Thursday'>Thursday</option>\n              <option value='Friday'>Friday</option>\n              <option value='Saturday'>Saturday</option>\n            </select>\n            <br />\n            <button\n              type='submit'\n              className='List-add-button'\n            >\n              + Add Workout\n            </button>\n          </form>\n\n        </section>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './WorkoutExercise.css'\nimport config from '../config'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default class WorkoutExercise extends Component {\n  static defaultProps = {\n    getWorkoutExercises: () => { },\n  }\n  static propTypes = {\n    getWorkoutExercise: PropTypes.func,\n    id: PropTypes.number,\n    name: PropTypes.string\n  }\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const workoutExerciseId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/workout_exercises/${workoutExerciseId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(() => {\n        this.props.getWorkoutExercises()\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id } = this.props\n    const path = 'exercise_log/' + id\n    return (\n      <section className='workout-exercise'>\n        <Link to={path}>\n          <h3>{name}</h3>\n        </Link>\n        <button\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          Delete\n        </button>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport './WorkoutExerciseList.css'\nimport { Link } from 'react-router-dom'\nimport config from '../config'\nimport WorkoutExercise from '../WorkoutExercise/WorkoutExercise'\nimport TokenService from '../services/token-service'\n\nexport default class WorkoutExerciseList extends Component {\n  state = {\n    exercises: [],\n    workout: {},\n  }\n  static defaultProps = {\n    match: { params: {} },\n    location: { pathname: {} }\n  }\n\n  componentDidMount() {\n    this.getWorkoutExercises()\n    this.getWorkout()\n  }\n\n  getWorkout = () => {\n    const { workoutId } = this.props.match.params\n    return fetch(`${config.API_ENDPOINT}/workouts/${workoutId}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((workout) => {\n        this.setState({ workout })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  getWorkoutExercises = () => {\n    const { workoutId } = this.props.match.params\n    return fetch(`${config.API_ENDPOINT}/workouts/${workoutId}/exercises`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then(exercises => {\n        this.setState({ exercises })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleClickBack = () => {\n    this.props.history.goBack()\n  };\n\n  render() {\n    const exercises = this.state.exercises\n    const workout = this.state.workout\n    const path = this.props.location.pathname + '/exercises'\n    return (\n      <>\n        <section className='workouts'>\n          <h2>{workout.title}</h2>\n          <button\n            onClick={this.handleClickBack}\n          >\n            Back\n          </button>\n          <ul>\n            {exercises.map(exercise => (\n              <li\n                key={exercise.id}\n              >\n                <WorkoutExercise\n                  id={exercise.id}\n                  exerciseId={exercise.exercise_id}\n                  name={exercise.exercise_name}\n                  getWorkoutExercises={this.getWorkoutExercises}\n                />\n              </li>\n            ))}\n          </ul>\n          <Link to={path}>\n            <button\n              onClick={this.handleClickAdd}\n            >\n              +Add Exercise\n            </button>\n          </Link>\n        </section>\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport config from '../config'\nimport TokenService from '../services/token-service'\nimport PropTypes from 'prop-types'\n\nexport default class AddExercise extends Component {\n  static propTypes = {\n    id: PropTypes.number,\n    name: PropTypes.string\n  }\n\n  handleAddExercise = e => {\n    e.preventDefault()\n    const newWorkoutExercise = {\n      workout_id: this.props.workoutId,\n      exercise_id: this.props.id,\n    }\n    fetch(`${config.API_ENDPOINT}/workout_exercises`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n      body: JSON.stringify(newWorkoutExercise),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(workoutExercise => {\n        this.props.handleGoBack()\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  };\n\n  render() {\n    const { id, name } = this.props\n    return (\n      <li key={id}>\n        <h3>{name}</h3>\n        <br />\n        <button\n          type='button'\n          onClick={this.handleAddExercise}\n        >\n          Add to workout\n        </button>\n      </li>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './AddExerciseList.css'\nimport AddExercise from './AddExercise'\nimport config from '../config'\nexport default class AddExerciseList extends Component {\n  static defaultProps = {\n    match: { params: {} },\n    location: { pathname: {} }\n  }\n  state = {\n    exercises: [],\n    muscle: 'Chest'\n  }\n\n  muscles = ['Chest', 'Back', 'Triceps', 'Biceps', 'Shoulders', 'Traps', 'Quads', 'Hamstrings', 'Calves']\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  getData = () => {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/exercises`)\n    ])\n      .then(([exercisesRes]) => {\n        if (!exercisesRes.ok)\n          return exercisesRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          exercisesRes.json(),\n        ])\n      })\n      .then(([exercises]) => {\n        this.setState({ exercises })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  filterMuscle = e => {\n    const muscle = e.target.value;\n    this.setState({\n      muscle: muscle\n    })\n  }\n\n  handleGoBack = () => {\n    this.props.history.goBack()\n  };\n\n  render() {\n    const exercises = this.state.exercises;\n    const workoutId = this.props.match.params.workoutId\n    const muscle = this.state.muscle;\n    const muscles = this.muscles;\n    return (\n      <>\n        <h2 className='add-exercise-header'>Add Exercise</h2>\n        <button\n          onClick={this.handleGoBack}\n        >\n          Back\n          </button>\n        <section className='muscle-group'>\n          <h3 className='muscle-header'>Muscle Group</h3>\n          <ul>\n            {muscles.map(muscle => (\n              (muscle === this.state.muscle\n                ? <li key={muscle}><button className='selected' onClick={this.filterMuscle} value={muscle}>{muscle}</button></li>\n                : <li key={muscle}><button onClick={this.filterMuscle} value={muscle}>{muscle}</button></li>\n              )\n            ))}\n          </ul>\n        </section>\n        <section className='workouts'>\n          <div>\n            Showing exercises for {muscle}:\n          </div>\n          <ul>\n            {exercises\n              .filter(exercise => exercise.muscle === muscle)\n              .map(exercise => (\n                <AddExercise\n                  key={exercise.id}\n                  id={exercise.id}\n                  name={exercise.exercise_name}\n                  workoutId={workoutId}\n                  handleGoBack={this.handleGoBack}\n                />\n              ))}\n          </ul>\n        </section>\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport TokenService from '../services/token-service'\nimport './Nav.css'\nimport config from '../config'\n\nexport default class Nav extends Component {\n  handleLogoutClick = () => {\n    TokenService.clearAuthToken()\n  }\n\n  handleLoginSuccess = () => {\n    const { location, history } = this.props\n    const destination = (location.state || {}).from || '/'\n    history.push(destination)\n  }\n\n  handleDemo = e => {\n    e.preventDefault()\n    this.setState({ error: null })\n    const login = {\n      user_name: 'dunder_mifflin',\n      password: 'Password1!',\n    }\n    fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(login),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(res => {\n        TokenService.saveAuthToken(res.authToken)\n        this.handleLoginSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  };\n\n  renderLoggedIn() {\n    return (\n      <>\n        <NavLink activeClassName='is-active' to ='/'>\n          <span>Home</span>\n        </NavLink>\n        <NavLink activeClassName='is-active' to='/workouts'>\n          <span>Workouts</span>\n        </NavLink>\n        <NavLink activeClassName='is-active' to='/exercises'>\n          <span>Exercises</span>\n        </NavLink>\n        <Link onClick={this.handleLogoutClick} to='/'>\n          <button>Logout</button>\n        </Link>\n      </>\n    )\n  }\n\n  renderLoggedOut() {\n    return (\n      <>\n        <NavLink activeClassName='is-active' to='/login'>\n          <button>Log in</button>\n        </NavLink>\n        <NavLink activeClassName='is-active' to='/register'>\n          <button className='sign-up-button'>Sign Up</button>\n        </NavLink>\n        <button onClick={this.handleDemo} className='sign-up-button'>Demo</button>\n      </>\n    )\n  }\n\n\n  render() {\n    return (\n      <>\n        <div className='nav-header'>\n          <Link to='/'>\n            <h3>AimFit</h3>\n          </Link>\n        </div>\n        <div className='nav-links'>\n          {TokenService.hasAuthToken()\n            ? this.renderLoggedIn()\n            : this.renderLoggedOut()\n          }\n        </div>\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport TokenService from '../services/token-service'\nimport './Landing.css'\n\nexport default class Landing extends Component {\n\n  renderLoggedOut() {\n    return(\n      <div><Link to='/register'><h3 className='get-started-link'>Sign Up</h3></Link></div>\n    )\n  }\n\n  renderLoggedIn() {\n    return(\n      <div><Link to='/workouts'><h3 className='get-started-link'>Get Started!</h3></Link></div>\n    )\n  }\n\n  render() {\n    return (\n      <div className='landing'>\n        <h2>Aim to be Fit.</h2>\n        <p>Create workout plans to help achieve your goals.</p>\n        {TokenService.hasAuthToken()\n          ? this.renderLoggedIn()\n          : this.renderLoggedOut()}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport config from '../config'\nimport PropTypes from 'prop-types'\nimport moment from 'moment';\n\nexport default class LogEntry extends Component {\n  static defaultProps = {\n    getLogEntries: () => { },\n  }\n  static propTypes = {\n    getLogEntries: PropTypes.func,\n    id: PropTypes.number,\n    set_count: PropTypes.number,\n    rep_count: PropTypes.number,\n    weight_count: PropTypes.number,\n  }\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const logEntryId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/exercise_log/${logEntryId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(() => {\n        this.props.getExerciseLog()\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { set_count, rep_count, weight_count, date_logged } = this.props\n    return (\n      <section className='workout-exercise'>\n        <h3>\n          {moment(date_logged).format('MM-DD-YYYY')}\n        </h3>\n        <p>\n          {weight_count} lbs for {set_count}x{rep_count}\n        </p>\n        <button\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          Delete\n        </button>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport config from '../config'\nimport LogEntry from './LogEntry'\nimport './ExerciseLog.css'\nimport TokenService from '../services/token-service'\n\nexport default class ExerciseLog extends Component {\n  state = {\n    exerciseLog: [],\n    exercise: {},\n  }\n  static defaultProps = {\n    match: { params: {} },\n    location: { pathname: {} }\n  }\n\n  componentDidMount() {\n    this.getExercise()\n    this.getExerciseLog()\n  }\n\n  getExerciseLog = () => {\n    const { exercise_id } = this.props.match.params\n    return fetch(`${config.API_ENDPOINT}/exercise_log/${exercise_id}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then((exerciseLog) => {\n        this.setState({ exerciseLog })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  getExercise = () => {\n    const { exercise_id } = this.props.match.params\n    return fetch(`${config.API_ENDPOINT}/exercises/${exercise_id}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${TokenService.getAuthToken()}`\n      }\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .then(exercise => {\n        this.setState({ exercise })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddEntry = e => {\n    e.preventDefault()\n    const { exercise_id } = this.props.match.params\n    const newEntry = {\n      set_count: e.target['entry-set-count'].value,\n      rep_count: e.target['entry-rep-count'].value,\n      weight_count: e.target['entry-weight-count'].value,\n    }\n    fetch(`${config.API_ENDPOINT}/exercise_log/${exercise_id}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n      body: JSON.stringify(newEntry),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(entry => {\n        this.getExerciseLog()\n        e.target['entry-set-count'].value = ''\n        e.target['entry-rep-count'].value = ''\n        e.target['entry-weight-count'].value = ''\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  };\n\n  handleClickBack = () => {\n    this.props.history.goBack()\n  };\n\n  render() {\n    const exerciseLog = this.state.exerciseLog\n    const exercise = this.state.exercise\n    return (\n      <>\n        <section className='workouts'>\n          <button onClick={this.handleClickBack}>\n            Back\n          </button>\n          <h2 className='log-header'>{exercise.exercise_name}</h2>\n          <form onSubmit={this.handleAddEntry} className='add-entry-form'>\n            <label htmlFor='entry-set-count-input' className='entry-set-count-label'>\n              Set x Rep:\n            </label>\n            <input\n              className='entry-set-count-input'\n              type='number'\n              min='0'\n              id='entry-set-count-input'\n              name='entry-set-count'\n              required />\n            &nbsp;x\n            <input\n              className='entry-rep-count-input'\n              type='number'\n              min='0'\n              id='entry-rep-count-input'\n              name='entry-rep-count'\n              required />\n            <br />\n            <label htmlFor='entry-weight-count-input'>\n              Weight:\n            </label>\n            <input\n              className='entry-weight-count-input'\n              type='number'\n              min='0'\n              id='entry-weight-count-input'\n              name='entry-weight-count'\n            />\n            <br />\n            <button\n              type='submit'\n              className='List-add-button'\n            >\n              + Add Entry\n            </button>\n          </form>\n          <ul>\n            {exerciseLog.map(logEntry => (\n              <li\n                key={logEntry.id}\n              >\n                <LogEntry\n                  id={logEntry.id}\n                  exercise_id={logEntry.exercise_id}\n                  weight_count={logEntry.weight_count}\n                  set_count={logEntry.set_count}\n                  rep_count={logEntry.rep_count}\n                  date_logged={logEntry.date_logged}\n                  getExerciseLog={this.getExerciseLog}\n                />\n              </li>\n            ))}\n          </ul>\n        </section>\n      </>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport Login from '../Login/Login'\nimport Register from '../Register/Register'\nimport ExerciseList from '../ExerciseList/ExerciseList'\nimport WorkoutList from '../WorkoutList/WorkoutList'\nimport WorkoutExerciseList from '../WorkoutExerciseList/WorkoutExerciseList'\nimport AddExerciseList from '../AddExerciseList/AddExerciseList'\nimport Nav from '../Nav/Nav'\nimport Landing from '../Landing/Landing'\nimport ExerciseLog from '../ExerciseLog/ExerciseLog'\nimport './App.css'\n\nclass App extends Component {\n  state = {}\n\n  renderMainRoutes() {\n    return (\n      <>\n        <Route\n          exact\n          path='/'\n          component={Landing}\n        />\n        <Route\n          exact\n          path='/login'\n          component={Login}\n        />\n        <Route\n          path='/register'\n          component={Register}\n        />\n        <Route\n          exact\n          path='/workouts'\n          component={WorkoutList}\n        />\n        <Route\n          exact\n          path='/exercises'\n          component={ExerciseList}\n        />\n        {['/workouts/:workoutId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={WorkoutExerciseList}\n          />\n        )}\n        {['/workouts/:workoutId/exercises'].map(path =>\n          <Route\n            key={path}\n            path={path}\n            component={AddExerciseList}\n          />\n        )}\n        {['/workouts/exercise_log/:exercise_id'].map(path =>\n          <Route\n            key={path}\n            path={path}\n            component={ExerciseLog}\n          />\n        )}\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <nav>\n          <Route\n            path='/'\n            component={Nav}\n          />\n        </nav>\n        <main>\n          {this.renderMainRoutes()}\n        </main>\n      </>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App/App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)"],"sourceRoot":""}